import { Alert } from 'react-native';
import { QueryKeyEnum } from '../enums/queryKey';
import { queryClient } from './queryClient';

export const handleSocketEvent = (data: any) => {
  switch (data.type) {
    case 'NEW_APPOINTMENT':
      Alert.alert(
        'üìÖ L·ªãch h·∫πn m·ªõi',
        data.payload?.message || 'B·∫°n c√≥ l·ªãch h·∫πn m·ªõi',
      );

      // ‚úÖ Refresh l·∫°i danh s√°ch l·ªãch kh√°m (React Query t·ª± refetch)
      queryClient.invalidateQueries({
        queryKey: [QueryKeyEnum.Appointment],
        exact: false,
      });
      break;

    // c√≥ th·ªÉ th√™m c√°c event kh√°c ·ªü ƒë√¢y
    case 'CANCEL_APPOINTMENT':
      Alert.alert(
        '‚ö†Ô∏è L·ªãch h·∫πn b·ªã h·ªßy',
        data.payload?.message || 'B·ªánh nh√¢n ƒë√£ h·ªßy l·ªãch h·∫πn.',
      );
      queryClient.invalidateQueries({ queryKey: ['appointments'] });
      break;

    case 'NEW_NOTIFICATION':
      Alert.alert(
        'üîî Th√¥ng b√°o m·ªõi',
        data.payload?.notification?.message || 'B·∫°n c√≥ th√¥ng b√°o m·ªõi.',
      );
      console.log('C√≥ notification m·ªõi:', data.payload?.notification);

      queryClient.invalidateQueries({
        queryKey: [QueryKeyEnum.Notification],
        exact: false,
      });
      break;

    default:
      console.log('[WS] Unknown event:', data);
  }
};
